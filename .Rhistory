warnings()
heatmap(as.matrix(df.autoInd[,-1]), scale = "none",
labRow = df.autoInd$SYMBOL, labCol = colnames(df.autoInd)[c(2,3)],
col=mycol2, trace = "none", density.info = "none",
margin = c(8, 6), lhei = c(2, 10),cexCol = 1.2,  dendrogram = "row", Rowv = FALSE,
main = "Heatmap: Autophagy Induction Original")
mycol2 <- colorpanel(1000, "white", "red")
heatmap(as.matrix(df.autoInd[,-1]), scale = "none",
labRow = df.autoInd$SYMBOL, labCol = colnames(df.autoInd)[c(2,3)],
col=mycol2, trace = "none", density.info = "none",
margin = c(8, 6), lhei = c(2, 10),cexCol = 1.2,  dendrogram = "row", Rowv = FALSE,
main = "Heatmap: Autophagy Induction Original")
heatmap(as.matrix(df.autoInd[,-1]), scale = "none",
labRow = df.autoInd$SYMBOL, labCol = colnames(df.autoInd)[c(2,3)],
col=mycol2, trace = "none", density.info = "none",
margin = c(8, 6), lhei = c(2, 10),cexCol = 1,  dendrogram = "row", Rowv = FALSE,
main = "Heatmap: Autophagy Induction Original")
library(plotly)
plot_ly(heatmap(as.matrix(df.autoInd[,-1]), scale = "none",
labRow = df.autoInd$SYMBOL, labCol = colnames(df.autoInd)[c(2,3)],
col=mycol2, trace = "none", density.info = "none",
margin = c(8, 6), lhei = c(2, 10), cexCol = 1,  dendrogram = "row", Rowv = FALSE,
main = "Heatmap: Autophagy Induction Original")
)
save.image("/Volumes/My Fortress/Bioinformatics/Tau study/R directories/FGF pos_neg project/FGF pos_neg project_062017.RData")
setwd("/Volumes/My Fortress/Bioinformatics/Tau study/R directories/FGF pos_neg project")
load("/Volumes/My Fortress/Bioinformatics/Tau study/R directories/FGF pos_neg project/FGF pos_neg project_062017.RData")
source("https://www.bioconductor.org/biocLite.R")
biocLite()
library(edgeR)
library(tximport)
library(GenomicFeatures)
library(ensembldb)
library(limma)
library(Glimma)
library(biomaRt)
library(AnnotationDbi)
library(org.Hs.eg.db)
library(GSEABase)
library(RColorBrewer)
library(gplots)
neg12.vs.pos12_eBayes_color <- neg12.vs.pos12_eBayes %>%
mutate(color = ifelse(neg12.vs.pos12_eBayes$logFC > 0 & neg12.vs.pos12_eBayes$adj.P.Val < 0.05,
yes = "Upregulated",
no = ifelse(neg12.vs.pos12_eBayes$logFC < 0 & neg12.vs.pos12_eBayes$adj.P.Val < 0.05,
yes = "Downregulated",
no = "No Change")))
### Volcano plot for whole genome ###
library(ggplot2)
library(dplyr)
neg12.vs.pos12_eBayes_color <- neg12.vs.pos12_eBayes %>%
mutate(color = ifelse(neg12.vs.pos12_eBayes$logFC > 0 & neg12.vs.pos12_eBayes$adj.P.Val < 0.05,
yes = "Upregulated",
no = ifelse(neg12.vs.pos12_eBayes$logFC < 0 & neg12.vs.pos12_eBayes$adj.P.Val < 0.05,
yes = "Downregulated",
no = "No Change")))
head(neg24.vs.pos24_eBayes_color)
myData <- data.frame(category = c("yes", "yes", "no", "no"), month = c('Jan', 'Feb', 'Jan', 'Feb'), values = c(6, 5, 4, 3))
head(myData)
neg24.vs.pos24_eBayes_color$time <- as.character("24h")
head(neg24.vs.pos24_eBayes_color)
neg12.vs.pos12_eBayes_color$time <- as.character("12h")
head(neg12.vs.pos12_eBayes_color)
dim(neg24.vs.pos24_eBayes_color)
dim(neg12.vs.pos12_eBayes_color)
df.bp <- merge(neg24.vs.pos24_eBayes_color, neg12.vs.pos12_eBayes_color, by="Symbol", all = TRUE)
head(df.bp)
dim(df.bp)
df.bp_24h <- neg24.vs.pos24_eBayes_color[, c(1,2,6,8,9)]
head(df.bp_24h)
dim(df.bp_24h) # 12890     9
df.bp_12h <- neg12.vs.pos12_eBayes_color[, c(1,2,6,8,9)]
head(df.bp_12h)
dim(df.bp_12h) # 12890     9
myData
plot.bp_24h <- df.bp_24h %>%
group_by(color) %>%
summarize(ngenes=sum(value))
plot.bp_24h <- df.bp_24h %>%
group_by(color) %>%
summarize(ngenes=sum(value))
plot.bp_24h <- df.bp_24h %>%
group_by(color) %>%
summarize(ngenes=sum(value)) %>%
print(n=20)
plot.bp_24h <- df.bp_24h %>%
group_by(color) %>%
summarize(ngenes=sum(color)) %>%
print(n=20)
plot.bp_24h <- df.bp_24h %>%
group_by(color) %>%
summarize(ngenes=sum(color))
plot.bp_24h <- df.bp_24h %>%
group_by(color)
head(plot.bp_24h)
plot.bp_24h <- df.bp_24h %>%
group_by(color) %>%
summarise(ngenes=sum(color))
plot.bp_24h <- df.bp_24h %>%
group_by(color) %>%
summarise(ngenes=length(color))
head(plot.bp_24h)
myData
gplot.bp_24h <- barplot(plot.bp_24h, space=c(0,2),legend.text=TRUE,beside=TRUE,horiz=TRUE,
density=NA,
col=c("red1","red4","green3"),
xlab="Number of genes",
axes=TRUE, names.arg=colnamesbarplot, cex.names=0.5, las=1)
gplot.bp_24h <- barplot(plot.bp_24h, space=c(0,2),legend.text=TRUE,beside=TRUE,horiz=TRUE,
density=NA,
col=c("red1","red4","green3"),
xlab="Number of genes",
axes=TRUE, cex.names=0.5, las=1)
gplot.bp_24h <- barplot(plot.bp_24h, space=c(0,2),legend.text=TRUE,beside=TRUE,horiz=TRUE,
density=NA,
col=c("red1","red4","green3"),
xlab="Number of genes",
axes=TRUE, cex.names=0.5, las=1, height = c(2, 2, 2))
gplot.bp_24h <- barplot(plot.bp_24h, horiz = TRUE, col = "red")
gplot.bp_24h <- barplot(plot.bp_24h$ngenes, horiz = TRUE, col = "red")
?barplot
?axis
axis(side=2)
library(scales)
gplot.bp_24h <- ggplot(plot.bp_24h, aes(color, fill = ngenes)) +
geom_bar(position = "fill")
gplot.bp_24h <- ggplot(plot.bp_24h, aes(color, fill = ngenes)) +
geom_bar(position = "fill")
gplot.bp_24h
gplot.bp_24h <- ggplot(plot.bp_24h, aes(color, fill = ngenes)) +
geom_bar(position = "fill", stat="identity")
gplot.bp_24h
?geom_bar
gplot.bp_24h <- ggplot(plot.bp_24h, aes(color, fill = ngenes)) +
geom_bar(position = "fill", stat="count")
gplot.bp_24h
install_github("easyGgplot2", "kassambara")
install.packages("devtools")
install_github("easyGgplot2", "kassambara")
library(devtools)
install_github("easyGgplot2", "kassambara")
library(easyGgplot2)
library(easyGgplot2)
library(kassambara/easyGgplot2)
library(easyGgplot2)
ggplot2.barplot(plot.bp_24h, xName = "ngenes", groupName="color")
ggplot2.barplot(plot.bp_24h, xName = "ngenes", groupName="color")
library(easyGgplot2)
gplot.bp_24h <- ggplot() + geom_bar(aes(y = color, fill = ngenes), data = plot.bp_24h,
stat="identity")
library(ggplot2)
gplot.bp_24h <- ggplot() + geom_bar(aes(y = color, fill = ngenes), data = plot.bp_24h,
stat="identity")
gplot.bp_24h <- ggplot() + geom_bar(aes(y = color, fill = ngenes), data = plot.bp_24h,
stat="identity")
setwd("/Volumes/My Fortress/Bioinformatics/Tau study/R directories/FGF pos_neg project")
source("https://www.bioconductor.org/biocLite.R")
biocLite()
library(edgeR)
library(tximport)
library(GenomicFeatures)
library(ensembldb)
library(limma)
library(Glimma)
library(biomaRt)
library(AnnotationDbi)
library(org.Hs.eg.db)
library(GSEABase)
library(RColorBrewer)
library(gplots)
library(dplyr)
### Volcano plot for whole genome ###
library(ggplot2)
# Import all lysoplex genes
lysoplex.all <- read.csv(file = "Lysoplex_All.csv", header = T, sep = ",")
tail(lysoplex.all)
?read.csv
# Import all lysoplex genes
lysoplex.all <- read.csv(file = "Lysoplex_All.csv", header = T, sep = ",", blank.lines.skip = T)
# Import all lysoplex genes
lysoplex.all <- read.csv(file = "Lysoplex_All.csv", header = T, blank.lines.skip = T)
# Import all lysoplex genes
lysoplex.all <- read.csv(file = "Lysoplex_All.csv", header = F, blank.lines.skip = T, nrows = 893, skip = 2)
tail(lysoplex.all)
# Import all lysoplex genes
lysoplex.all <- read.csv(file = "Lysoplex_All.csv", header = F, blank.lines.skip = T, nrows = 891, skip = 2)
tail(lysoplex.all)
head(lysoplex.all)
sum(duplicated(lysoplex.all$V1))
sum(is.na(lysoplex.all))
sum(duplicated(lysoplex.all)) # 0
lysoplex.all_efit4 <- efit4[efit4$genes$Symbol %in% as.matrix(lysoplex.all),]
lysoplex.all_efit4
summary(decideTests(lysoplex.all_efit4))
dt_APList
lysoplex.all_efit4 <- efit4[efit4$genes$Symbol %in% lysoplex.all$V1,]
lysoplex.all_efit4
summary(decideTests(lysoplex.all_efit4))
lysoplex.all_efit4 <- efit4[efit4$genes$Symbol %in% lysoplex.all,]
lysoplex.all_efit4
summary(decideTests(lysoplex.all_efit4))
efit4
#AutophagyList <- read.csv("pathways3Mouse_new.csv", header = T, sep = ",", nrows = 480)[,1:35]
head(AutophagyList)
vfit4
v
head(neg24.vs.pos24_eBayes)
#AutophagyList <- read.csv("pathways3Mouse_new.csv", header = T, sep = ",", nrows = 480)[,1:35]
head(AutophagyList)
AutophagyList_efit4
head(lysoplex.all)
head(efit4$genes$SYMBOL)
head(AutophagyList)
head(as.matrix(AutophagyList))
lysoplex.all_efit4 <- efit4[efit4$genes$Symbol %in% as.matrix(lysoplex.all),]
lysoplex.all_efit4
summary(decideTests(lysoplex.all_efit4))
head(as.matrix(lysoplex.all))
head(as.matrix(lysoplex.all$V1))
head(as.character(lysoplex.all$V1))
lysoplex.all_efit4 <- efit4[efit4$genes$Symbol %in% as.character(lysoplex.all$V1),]
lysoplex.all_efit4
summary(decideTests(lysoplex.all_efit4))
head(efit4$genes$SYMBOL)
as.character(as.character(lysoplex.all$V1))
lysoplex.all_efit4 <- efit4[efit4$genes$Symbol %in% as.character(lysoplex.all$V1),]
lysoplex.all_efit4
lysoplex.all_efit4 <- efit4[as.character(efit4$genes$Symbol) %in% as.character(lysoplex.all$V1),]
lysoplex.all_efit4
efit4$genes$SYMBOL["atg7"]
efit4$genes$SYMBOL[2]
head(lysoplex.all)
lysoplex.all_efit4 <- efit4[efit4$genes$Symbol %in% as.matrix(lysoplex.all),]
lysoplex.all_efit4
lysoplex.all_efit4 <- efit4[efit4$genes$Symbol %in% lysoplex.all,]
lysoplex.all_efit4
summary(decideTests(lysoplex.all_efit4))
head(efit4$genes$Symbol)
efit4$genes$SYMBOL
lysoplex.all_efit4 <- efit4[efit4$genes$SYMBOL %in% lysoplex.all,]
lysoplex.all_efit4
lysoplex.all_efit4 <- efit4[efit4$genes$SYMBOL %in% as.matrix(lysoplex.all),]
lysoplex.all_efit4
summary(decideTests(lysoplex.all_efit4))
dt_lysoplex.all <-  summary(decideTests(lysoplex.all_efit4))
dt_APList
dt_wholeGenome <- summary(decideTests(efit4))
dt_wholeGenome
save.image("/Volumes/My Fortress/Bioinformatics/Tau study/R directories/FGF pos_neg project/FGF pos_neg project_062017.RData")
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("xts", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
setwd("/Volumes/My Fortress/Bioinformatics/Tau study/R directories/FGF pos_neg project")
load("/Volumes/My Fortress/Bioinformatics/Tau study/R directories/FGF pos_neg project/FGF pos_neg project_062017.RData")
source("https://www.bioconductor.org/biocLite.R")
biocLite()
library(edgeR)
library(tximport)
library(GenomicFeatures)
library(ensembldb)
library(limma)
library(Glimma)
library(biomaRt)
library(AnnotationDbi)
library(org.Hs.eg.db)
library(GSEABase)
library(RColorBrewer)
library(gplots)
-log10(0.01)
-log10(0.05)
10^-0.819434
10^-0.799434
10^-0.386961497
2^0.4
2^1.5
2^0.31
2^0.-31
2^-0.31
2^(-0.31)
log2
log10(2)
log10(1.5)
log10(1.5)/0.3010
library(VennDiagram)
ClusterI<- c("HanXRQChr10g0293411T", "HanXRQChr09g0239551T", "HanXRQChr15g0489401R", "HanXRQChr02g0052061T", "HanXRQChr14g0430311N", "HanXRQChr15g0482661N", "HanXRQChr02g0046611R", "HanXRQChr02g0048181R", "HanXRQChr09g0260361N", "HanXRQChr08g0224171C", "HanXRQChr15g0489421R", "HanXRQChr03g0065841N", "HanXRQChr05g0129181R")
ClusterII<- c("HanXRQChr03g0082411N", "HanXRQChr13g0421521N", "HanXRQChr09g0240011N", "HanXRQChr11g0348661N", "HanXRQChr16g0505221N", "HanXRQChr15g0468571C", "HanXRQChr16g0522521T", "HanXRQChr10g0317141T", "HanXRQChr16g0520121T", "HanXRQChr13g0421611N", "HanXRQChr03g0077151T", "HanXRQChr15g0477941C", "HanXRQChr04g0103931T", "HanXRQChr04g0098561T", "HanXRQChr06g0183851T", "HanXRQChr09g0267021N", "HanXRQChr10g0279361N", "HanXRQChr06g0184181T", "HanXRQChr09g0240261N", "HanXRQChr03g0077061T", "HanXRQChr10g0279351N", "HanXRQChr02g0050681T", "HanXRQChr01g0016951T", "HanXRQChr13g0423781N", "HanXRQChr15g0478941C", "HanXRQChr09g0239991T", "HanXRQChr11g0320701N", "HanXRQChr04g0098511T", "HanXRQChr02g0037011N", "HanXRQChr13g0426201C", "HanXRQChr04g0117551T", "HanXRQChr09g0243851N", "HanXRQChr03g0079391N", "HanXRQChr09g0239281T", "HanXRQChr09g0241811T", "HanXRQChr04g0101181T", "HanXRQChr01g0029301C", "HanXRQChr08g0209681T", "HanXRQChr14g0453551N", "HanXRQChr05g0149501T", "HanXRQChr13g0397101N", "HanXRQChr13g0417981C", "HanXRQChr10g0316961N")
ClusterIII <- c("HanXRQChr03g0065091T", "HanXRQChr01g0016931T", "HanXRQChr17g0550881C", "HanXRQChr03g0064011T", "HanXRQChr09g0239211T", "HanXRQChr06g0183841T", "HanXRQChr04g0095771T", "HanXRQChr09g0240621T", "HanXRQChr12g0374601C", "HanXRQChr14g0430731R", "HanXRQChr10g0298171T", "HanXRQChr08g0211081T", "HanXRQChr02g0050711T", "HanXRQChr12g0361091T", "HanXRQChr06g0175651N")
v2 <- draw.triple.venn(
area1 = 60,
area2 = 60,
area3 = 60,
n12 = 20,
n23 = 10,
n13 = 15,
n123 = 5,
cex = 0.25,
cat.cex = 1.5,
alpha = c(0.5, 0.5, 0.5),
category = c("ClusterI", "ClusterII", "ClusterIII"),
cat.col = c("blue", "red", "green"),
fill = c("red", "blue","green")
)
overlaps <- calculate.overlap(list("ClusterI"=ClusterI, "ClusterII"=ClusterII, "ClusterIII"=ClusterIII))
overlaps
for (i in 1:length(overlaps)){
v2[[6+indx[i] ]]$label <- paste(overlaps[[i]], collapse = "\n")
}
grid.newpage()
grid.draw(v2)
for (i in 1:length(overlaps)){
v2[[6+indx[i] ]]$label <- paste(overlaps[[i]], collapse = "\n")
}
names(overlaps)
indx <- as.numeric(substr(names(overlaps),2,2))
for (i in 1:length(overlaps)){
v2[[6+indx[i] ]]$label <- paste(overlaps[[i]], collapse = "\n")
}
grid.newpage()
grid.draw(v2)
v2 <- draw.triple.venn(
area1 = 60,
area2 = 60,
area3 = 60,
n12 = 20,
n23 = 10,
n13 = 15,
n123 = 5,
cex = 0.25,
cat.cex = 1.5,
alpha = c(0.5, 0.5, 0.5),
category = c("ClusterI", "ClusterII", "ClusterIII"),
cat.col = c("blue", "red", "green"),
fill = c("red", "blue","green")
)
for (i in 1:length(overlaps)){
v2[[6+indx[i] ]]$label <- paste(overlaps[[i]], collapse = "\n")
}
grid.newpage()
grid.draw(v2)
x <- list()
x$A <- as.character(c("Per_36","Cent","CeM","vDG","LAVL","RSGd"))
x$B <- as.character(c("vCA1","DLE","Per_36","vDG","DIE","Per_35"))
x$C <- as.character(c("vCA1","Cg1","LAVL", "RSGc", "RSGd","Per_35","Per_36"))
x$D <- as.character(c("Por","Cg1","RSGc","LAVL","Per_35","RSGd","Per_36"))
require(VennDiagram)
v0 <-venn.diagram(x, lwd = 3, col = c("red", "green", "orange", "blue"),
fill = c("red", "blue", "green", "orange"), apha = 0.5, filename = NULL)
v0 <-venn.diagram(x, lwd = 3, col = c("red", "green", "orange", "blue"),
fill = c("red", "blue", "green", "orange"), alpha = 0.5, filename = NULL)
grid.draw(v0)
overlaps <- calculate.overlap(x)
overlaps <- rev(overlaps)
for (i in 1:length(overlaps)){
v0[[i+8]]$label <- paste(overlaps[[i]], collapse = "\n")
}
grid.newpage()
grid.draw(v0)
overlaps
overlaps <- calculate.overlap(x)
overlaps
for (i in 1:length(overlaps)){
v0[[i+8]]$label <- paste(overlaps[[i]], collapse = "\n")
}
grid.newpage()
grid.draw(v0)
overlaps <- calculate.overlap(x)
overlaps <- rev(overlaps)
for (i in 1:length(overlaps)){
v0[[i+8]]$label <- paste(overlaps[[i]], collapse = "\n")
}
grid.newpage()
grid.draw(v0)
grid.draw(v0)
grid.newpage()
grid.draw(v0)
v0 <-venn.diagram(x, lwd = 3, col = c("red", "green", "orange", "blue"),
fill = c("red", "blue", "green", "orange"), alpha = 0.5, filename = NULL)
grid.draw(v0)
grid.newpage()
grid.draw(v0)
for (i in 1:length(overlaps)){
v0[[i+8]]$label <- paste(overlaps[[i]], collapse = "\n")
}
grid.newpage()
grid.draw(v0)
library(limma)
?roast
2^2.1119
0.0403772/0.00934095
# Reopened R studio and checked R version.
R.Version() # 3.5.2
library(RDAVIDWebService)
david <- DAVIDWebService$new(email="sdarji@nki.rfmh.org")
david
david <- DAVIDWebService(email="sdarji@nki.rfmh.org",
url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService.DAVIDWebServiceHttpSoap12Endpoint/")
david
library(RDAVIDWebService)
david<-DAVIDWebService(email="sdarji@nki.rfmh.org",
url="https://david.ncifcrf.gov/webservice/services/DAVIDWebService.DAVIDWebServiceHttpSoap12Endpoint/")
setwd("~/Bioinformatics/PS1KO Iso/R_dir_ps1iso")
setwd("~/Bioinformatics/PS1KO Iso/R_dir_ps1iso")
load("~/Bioinformatics/PS1KO Iso/R_dir_ps1iso/ps1iso.RData")
library(BiocManager)
library(limma)
library(edgeR)
library(Glimma)
#library(AnnotationDbi)
options(java.parameters = "-Xmx8000m")
library(XLConnect)
library(RColorBrewer)
library(gplots)
library(ggplot2)
setwd("~/Bioinformatics/Raj RNA-seq/R_dir_raj")
load("~/Bioinformatics/Raj RNA-seq/R_dir_raj/raj.RData")
library(ggplot2)
p_vq4 <- ggplot(res_vq.P90.EvsS_labels, aes(logFC, -log10(adj.P.Val))) +
geom_point(aes(color=label), alpha=1, size=3) +
geom_text_repel(data = subset(res_vq.P90.EvsS_labels, label %in% c("Upregulated", "Downregulated")), aes(label = genes), size = 3,
segment.color = "grey30",
segment.size = 0.5,
segment.alpha = 1,
min.segment.length = 0,
point.padding = 0.25) +
scale_color_manual(values =c("blue", "grey", "red")) +
geom_vline(xintercept=c(-log2(1.5),log2(1.5)), lty=4, col="black", lwd=0.6) +
geom_hline(yintercept = -log10(0.05), lty=4, col="black", lwd=0.6) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(color = "black")) +
theme(legend.title = element_blank(),
legend.position = c(0.05,0.90),
legend.justification = c("left","top"),
legend.box.background = element_rect(color = "black")) +
scale_y_continuous(breaks = c(0:4,7, by=3))
library(ggrepel)
p_vq4 <- ggplot(res_vq.P90.EvsS_labels, aes(logFC, -log10(adj.P.Val))) +
geom_point(aes(color=label), alpha=1, size=3) +
geom_text_repel(data = subset(res_vq.P90.EvsS_labels, label %in% c("Upregulated", "Downregulated")), aes(label = genes), size = 3,
segment.color = "grey30",
segment.size = 0.5,
segment.alpha = 1,
min.segment.length = 0,
point.padding = 0.25) +
scale_color_manual(values =c("blue", "grey", "red")) +
geom_vline(xintercept=c(-log2(1.5),log2(1.5)), lty=4, col="black", lwd=0.6) +
geom_hline(yintercept = -log10(0.05), lty=4, col="black", lwd=0.6) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(color = "black")) +
theme(legend.title = element_blank(),
legend.position = c(0.05,0.90),
legend.justification = c("left","top"),
legend.box.background = element_rect(color = "black")) +
scale_y_continuous(breaks = c(0:4,7, by=3))
p_vq4
p_vq4 <- ggplot(res_vq.P90.EvsS_labels, aes(logFC, -log10(adj.P.Val))) +
geom_point(aes(color=label), alpha=1, size=3) +
geom_text_repel(data = res_vq.P90.EvsS_labels,
segment.color = "grey30",
segment.size = 0.5,
segment.alpha = 1,
min.segment.length = 0,
point.padding = 0.25) +
scale_color_manual(values =c("blue", "grey", "red")) +
geom_vline(xintercept=c(-log2(1.5),log2(1.5)), lty=4, col="black", lwd=0.6) +
geom_hline(yintercept = -log10(0.05), lty=4, col="black", lwd=0.6) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(color = "black")) +
theme(legend.title = element_blank(),
legend.position = c(0.05,0.90),
legend.justification = c("left","top"),
legend.box.background = element_rect(color = "black")) +
scale_y_continuous(breaks = c(0:4,7, by=3))
p_vq4
p_vq4 <- ggplot(res_vq.P90.EvsS_labels, aes(logFC, -log10(adj.P.Val))) +
geom_point(aes(color=label), alpha=1, size=3) +
scale_color_manual(values =c("blue", "grey", "red")) +
geom_vline(xintercept=c(-log2(1.5),log2(1.5)), lty=4, col="black", lwd=0.6) +
geom_hline(yintercept = -log10(0.05), lty=4, col="black", lwd=0.6) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(color = "black")) +
theme(legend.title = element_blank(),
legend.position = c(0.05,0.90),
legend.justification = c("left","top"),
legend.box.background = element_rect(color = "black")) +
scale_y_continuous(breaks = c(0:4,7, by=3))
p_vq4
p_vq4 <- ggplot(res_vq.P90.EvsS_labels, aes(logFC, -log10(adj.P.Val))) +
geom_point(aes(color=label), alpha=1, size=3) +
scale_color_manual(values =c("blue", "grey", "red")) +
geom_vline(xintercept=c(-log2(1.5),log2(1.5)), lty=4, col="black", lwd=0.6) +
geom_hline(yintercept = -log10(0.05), lty=4, col="black", lwd=0.6) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(color = "black")) +
theme(legend.title = element_blank(),
legend.position = c(0.05,0.90),
legend.justification = c("left","top"),
legend.box.background = element_rect(color = "black"))
p_vq4
#axis.break(axis = 1, breakpos = 2, style = "slash")
dev.print(tiff, "volcano_vq4_noLabels_P90.EvsS_0.5_0.05.tiff", unit="in", height=6, width=6, res=600)
save.image("~/Bioinformatics/Raj RNA-seq/R_dir_raj/raj.RData")
1332/60
setwd("~/Bioinformatics/PS1KO Iso/R_dir_ps1iso")
load("~/Bioinformatics/PS1KO Iso/R_dir_ps1iso/ps1iso.RData")
heatmap.2(efit3.contr$t[row.names(efit3.contr$t) %in% geneSets110_Mm$protein.transport.40., c(2,1)],
Colv = "dendrogram", dendrogram = "none",
col = mycol, trace = "none", density.info = "none",
lhei = c(2,10), margins = c(8,6), cexCol = 1, srtCol = 0)  ## SAME RESULT. USED in MS.
?eBayes
mroast3.gs100_ps1isoVSps1
mroast3.gs100_ps1VSwt
1.099989e-04
contr.mat
mroast3.gs100_wtisoVSwt <- mroast(v3, idx3.all.gs110, design, contrast = contr.mat[,6], nrot = 100000)
mroast3.gs100_wtisoVSwt
write.table(mroast3.gs100_wtisoVSwt, file = "GSEA/mroast3.gs100_wtisoVSwt.txt", sep = "\t",
row.names = T, col.names = NA, quote = F)
1.608474e-03
